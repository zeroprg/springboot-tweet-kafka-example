spring.kafka.bootstrap-servers=${CLOUDKARAFKA_BROKERS}
#Use security settings below if you need to secure it
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME}-consumers

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka

cloudkarafka.topic=${CLOUDKARAFKA_USERNAME}-default

#Tweeters API keys
tweeter.consumerKeyStr=r1wFskT3q
tweeter.consumerSecretStr=fBbmp71HKbqalpizIwwwkBpKC
tweeter.accessTokenStr=298FPfE16frABXMcRIn7aUSSnNneMEPrUuZ
tweeter.accessTokenSecretStr=1LMNZZIfrAimpD004QilV1pH3PYTvM
